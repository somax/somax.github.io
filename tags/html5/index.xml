<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Html5 on So&#39;Blog</title>
    <link>https://somax.me/tags/html5.html</link>
    <description>Recent content in Html5 on So&#39;Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 19 Jul 2015 01:19:36 +0000</lastBuildDate>
    
	<atom:link href="https://somax.me/tags/html5/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HTML5存储之战 －－ localStorage vs. IndexedDB vs. Web SQL</title>
      <link>https://somax.me/teambition/tb_55aafb28f85b738a17cdb67d.html</link>
      <pubDate>Sun, 19 Jul 2015 01:19:36 +0000</pubDate>
      
      <guid>https://somax.me/teambition/tb_55aafb28f85b738a17cdb67d.html</guid>
      <description>这篇文章（55aafb28f85b738a17cdb67d）是从 Teambition 迁移过来的
 2012-11-08 当前，在本地浏览器有三种方式可以比cookies更永久和大量地存储数据： 1. Web Storage 2. Indexed Database API 3. Web SQL Database
这些名字看起来都差不多，但实现方式是不一样的。接下来会说说，它们能够做什么、优点和缺点、目前我最喜欢的是什么。尽管我的意见会随着技术的不断成熟而改变。
这几种技术都采用了相同的保护数据访问的方式（例如，javascript只能访问当前域名下的数据）。这些保护方式都很好，并且没有区别，下面我将不再做详细说明。
Web Storage Web存储（web storage），特别是本地存储（local storage）部分，是一个简单的键值存储系统（key/value persistence system）。
优点： * 十分简单的API，主流浏览器的新版本都已经获得支持。
缺点： * 不支持查询语言，模式（schemas），跟平常调用数据库不一样。对于大型数据的组织不能很好的进行扩展。 * 不支持事务安全。如果应用在运行，我想晚上就不能睡个安稳觉了，因为随时可能出现竞争条件（race condition）并出现数据污染的危机。
Index Database API IndexedDB是基于简单的平面文件（flat-file）数据库，采用了分层的键值存储（key/value persistence）和基本的索引。
优点： * 如果你熟悉NoSQL，这是再适合不过了。
缺点： * 还没获得大部分浏览器的支持。 * 不支持SQL，但未来可能会有支持SQL的模块。
Web SQL Database Web SQL是基于浏览器中嵌入的sqlite。我已经断断续续地使用sqlite有几年了。刚开始由于它的名字和所采用的架构（只是一个平面文件（flat-file)数据库）而看不起它（原谅我的浅薄）。经过深入钻研，我发现它是一个非常稳定的平台，只要你能容忍它的限制，很适合产品的使用。其实它的限制也不是很大（我想存储个1G应该问题不大），继承了平面文件（flat-file）数据库的优点（高并发性）但缺少一些特性（存储过程（stored procs）和其它一些高端数据库特性）。
优点： * 快速和功能丰富的sql实现（除了select/insert/update/delete，还能使用joins、inner selects等）。
缺点： * Chrome和基于webkit的浏览器（safari等）支持，但Firefox和IE不支持。 * 那个该死的W3C工作组已经坚持这个标准有一段时间了，他们很久前说过至少会有两个对该标准的独立实现，但到目前为止只有一个，因为每个人都使用sqlite。
我倒希望标准工作组能够考虑一下sqlite的特殊性并改进一下标准－－这个已经在公共域名上了，对每个人都可用，没有附加条款。Sqlite非常适合浏览器，它的限制不是问题。一次只有一个用户使用浏览器，没有并发问题。在简单没有管理的数据库中，没人需要高端数据库的一些特性。我想这是为什么Android和iOS都使用sqlite来存储。
总结 如果需要部署在移动平台，Web SQL是没有异议的。如果是桌面环境并使用Chrome或Safari作为你的浏览器，Web SQL也是合适的。当前我不会在大型应用中使用其他两种标准。</description>
    </item>
    
    <item>
      <title>HTML5 高性能动画组件</title>
      <link>https://somax.me/teambition/tb_552f2c730ed4ab99504df93b.html</link>
      <pubDate>Thu, 16 Apr 2015 03:28:51 +0000</pubDate>
      
      <guid>https://somax.me/teambition/tb_552f2c730ed4ab99504df93b.html</guid>
      <description>这篇文章（552f2c730ed4ab99504df93b）是从 Teambition 迁移过来的
 Ultra high-performance, professional-grade animation for the modern webhttp://greensock.com/ &amp;nbsp;</description>
    </item>
    
  </channel>
</rss>