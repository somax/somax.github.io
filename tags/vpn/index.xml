<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VPN on So&#39;Blog</title>
    <link>https://somax.me/tags/vpn.html</link>
    <description>Recent content in VPN on So&#39;Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 17 Apr 2018 14:06:43 +0000</lastBuildDate>
    
	<atom:link href="https://somax.me/tags/vpn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>使用容器部署 OpenVPN</title>
      <link>https://somax.me/teambition/tb_5ad5ff7346021671da825337.html</link>
      <pubDate>Tue, 17 Apr 2018 14:06:43 +0000</pubDate>
      
      <guid>https://somax.me/teambition/tb_5ad5ff7346021671da825337.html</guid>
      <description>这篇文章（5ad5ff7346021671da825337）是从 Teambition 迁移过来的
部署过程使用了开源项目：kylemanna/docker-openvpn，详细文档请访问 https://github.com/kylemanna/docker-openvpn
  为数据卷选个名字存放到环境变量 $OVPN_DATA，建议使用 ovpn-data- 前缀来方便识别。在下面的示例中请替换 example。  OVPN_DATA=&amp;#34;ovpn-data-example&amp;#34;  初始化 $OVPN_DATA 容器，这个容器将用来存放配置文件与证书。 初始化过程中会提示输入密码来保护证书。下面的示例中请使用合适的域名或 IP 地址替换 VPN.SERVERNAME.COM。  docker volume create --name $OVPN_DATA docker run -v $OVPN_DATA:/etc/openvpn --rm kylemanna/openvpn ovpn_genconfig -u udp://VPN.SERVERNAME.COM docker run -v $OVPN_DATA:/etc/openvpn --rm -it kylemanna/openvpn ovpn_initpki  启动容器  docker run -v $OVPN_DATA:/etc/openvpn -d -p 1194:1194/udp --cap-add=NET_ADMIN kylemanna/openvpn  生成客户端证书（无密码）  docker run -v $OVPN_DATA:/etc/openvpn --rm -it kylemanna/openvpn easyrsa build-client-full CLIENTNAME nopass  导出客户端配置文件（包含证书）  docker run -v $OVPN_DATA:/etc/openvpn --rm kylemanna/openvpn ovpn_getclient CLIENTNAME &amp;gt; CLIENTNAME.</description>
    </item>
    
    <item>
      <title>ShadowSock 快速上手</title>
      <link>https://somax.me/teambition/tb_5645566510638ccf2327a70e.html</link>
      <pubDate>Fri, 13 Nov 2015 03:17:57 +0000</pubDate>
      
      <guid>https://somax.me/teambition/tb_5645566510638ccf2327a70e.html</guid>
      <description>这篇文章（5645566510638ccf2327a70e）是从 Teambition 迁移过来的
 Server Install Debian / Ubuntu:
apt-get install python-pip pip install shadowsocks  CentOS:
yum install python-setuptools &amp;amp;&amp;amp; easy_install pip pip install shadowsocks  Windows:
See [Install Server on Windows]
Usage ssserver -p 443 -k password -m aes-256-cfb  To run in the background:
sudo ssserver -p 443 -k password -m aes-256-cfb --user nobody -d start  To stop:
sudo ssserver -d stop  To check the log:</description>
    </item>
    
  </channel>
</rss>