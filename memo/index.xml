<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>学习备忘录 on So&#39;Blog</title>
    <link>https://somax.me/memo.html</link>
    <description>Recent content in 学习备忘录 on So&#39;Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 10 Jun 2018 14:36:06 +0800</lastBuildDate>
    
	<atom:link href="https://somax.me/memo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Typora 使用小技巧</title>
      <link>https://somax.me/memo/typora-tips.html</link>
      <pubDate>Sun, 10 Jun 2018 14:36:06 +0800</pubDate>
      
      <guid>https://somax.me/memo/typora-tips.html</guid>
      <description>Typora 是一款非常好用跨平台 Markdown 编辑器。和很多类似的软件一样使用 Web 技术开发，并使用 Electron 封装成桌面应用，目前 beta 版可以免费下载使用，写这篇博客的时版本是 0.9.9.16.2。
Typora 新版本增加了很多功能，这里记录一下个人在使用过程中的一些偏好设置与小技巧（基于 MacOS）。
命令行启动 很多时候工作流程会使用 git 命令对文档进行版本管理，为了快速的在命令行启动 Typora，我通过添加别名t来快速启动 Typora。在 ~/.bash_profile 中添加 alias t=&amp;quot;open -a typora&amp;quot;，执行source ~/.bash_profile后，就可以在命令行中运行 t path/to/filename.md 以快速打开并开始编辑文件。
新版 Typora 支持了文件夹模式，所以可以运行t path 打开整个文件夹，或者 用t . 打开当前文件夹。
偏好设置 按 Ctrl + , 打开偏好设置面板。
 偏好设置可以根据个人喜好的设置，这里列出了一些我自己的喜好，也许在今后的深入使用过程中会更改这些设置。
 自定义主题  可以在偏好设置面板点击『打开主题文件夹』查看所有样式文件，详细说明查看官方文档：https://support.typora.io/Add-Custom-CSS/
 我比较喜欢 github 主题，但我希望改变一下背景颜色，让眼睛更舒适，在主题文件夹新建 github.user.css文件，添加如下代码：
body{ background-color: #f3f2ee; } 然后在新增 base.user.css 文件，在里面添加一些自定义的样式，这个文件是针对所有样式都起作用的。
/* 添加自动序号样式 */ #write { counter-reset: h2 } h1 { counter-reset: h2 } h2 { counter-reset: h3 } h3 { counter-reset: h4 } h4 { counter-reset: h5 } h5 { counter-reset: h6 } #write h2:before { counter-increment: h2; content: counter(h2) &amp;#34;.</description>
    </item>
    
    <item>
      <title>将 Teambition 分享迁移到 hugo</title>
      <link>https://somax.me/memo/export-from-teambition.html</link>
      <pubDate>Wed, 23 May 2018 23:06:25 +0800</pubDate>
      
      <guid>https://somax.me/memo/export-from-teambition.html</guid>
      <description>Teambition 是一个非常好的团队协作工具，公司内部一直使用它做项目管理和知识分享的平台。
经过几年的积累，在公司 TB 知识管理项目中已经发布了三百来条分享记录（自己都没想到有这么多了），其中有很多是可以公开的，所以利用之前研究 TB API 的项目的基础上，完成了批量导出并自动生成 hugo 格式文档的工具 somax/teambition-sync 。
虽然 hugo 生成 300 篇文章只需要 2250ms，不过还是需要人工筛选一下，后续会慢慢（也许很快）上传到 这里。</description>
    </item>
    
    <item>
      <title>建站笔记 - 将网站托管到 Github</title>
      <link>https://somax.me/memo/host-on-github.html</link>
      <pubDate>Mon, 21 May 2018 16:41:58 +0800</pubDate>
      
      <guid>https://somax.me/memo/host-on-github.html</guid>
      <description>有很多使用 github pages 功能免费发布网站的教程，也可以直接看 官方文档，就不再赘述了。
github 设定 有一些注意事项这里提一下，根据 github 的规定，使用 &amp;lt;用户名&amp;gt;.github.io 作为项目名称，就可以通过 &amp;lt;用户名&amp;gt;.github.io 这个域名访问到网站，所以我的是就是 somax.github.io。
hugo 渲染页面默认会输出到 public 目录，想了个方案来管理源文件和最终静态网站文件：
 在项目中建立 master 及 src 两个分支，master 分支用来放最终静态网站文件，而 src 分支存放源文件 在 src 分支上，添加 public 目录到 .gitignore 以便提交源码时忽略它 然后在 public 目录中重新 git init 并存放 master 分支  这样就很方便了，源码在主目录操作，hugo 命令渲染好在进入 public 提交静态页面代码。
域名设置 想要 .IO 或者 .ME 的域名，找了一下国内域名供应商视乎没有提供。最后在 godaddy.com 购买了 somax.me，第一年 6 折，2年共 ￥150.99。
购买成功后，进入 DNS 管理界面进行 DNS 配置：
   类型 名称 值 TTL     A @ 185.</description>
    </item>
    
    <item>
      <title>建站笔记 - 使用 hugo 建立我的博客</title>
      <link>https://somax.me/memo/building-soblog-with-hugo.html</link>
      <pubDate>Mon, 21 May 2018 14:01:10 +0800</pubDate>
      
      <guid>https://somax.me/memo/building-soblog-with-hugo.html</guid>
      <description>这是 开篇 之后的第一篇博客，记录一下建立这个博客网站的过程应该是个不错的选择。
 前言 其实很久之前就有看到别人使用 Github Pages + jekyll 来免费搭建自己的博客网站，不过最近由于工作的原因接触 go 语言的项目越来越多，所以特意查了一下 Go 语言相关的建站工具，发现了 hugo 这个项目。 就毫不犹豫的（其实还是纠结了一下）选择了 hugo。原因主要是 开源，跨平台，安装简单，渲染速度快！官方自称：&amp;rdquo;The world’s fastest framework for building websites&amp;ldquo;
使用 Hugo 建立网站 过程中参考了官方文档，还有个老兄建立了中文版的网站 http://gohugo.org 也给了很大帮助。
不过作为学习总结，还是记录一下自己的操作过程。
安装 Hugo hugo 官网访问很慢，还是直接 github release 下载比较快。根据操作系统选择合适版本下载即可（由于 Go语言的特性，天生跨平台，可以选择 ARM 版本来安装到树莓派上玩耍），具体过程就略了。
新建站点 按照 快速手册 一步步下来，基本上没什么问题。
 hugo 安装完成一定要选择一个 Theme（或者自建&amp;ndash;如果觉得自己可以的话），并且根据 Theme 的说明配置好 config.toml 文件，否则可能只能看到不完整的网站。
 https://themes.gohugo.io/minimo/ 看上去不错，比较简洁，很适合做日志型网站。
文档 一定要先看一遍，避免走弯路（因为我已经走了🕺）。
修改配置  从 minimo theme 的 exampleSite 目录中复制 config.</description>
    </item>
    
  </channel>
</rss>